name: Build and deploy Harmony to Dev environment

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-image:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          tags: harmony:latest
          outputs: type=docker,dest=/tmp/harmony-image.tar

      - uses: actions/upload-artifact@v4
        with:
          name: harmony-image
          path: /tmp/harmony-image.tar
          if-no-files-found: error

  deploy-dev:
    permissions:
      id-token: write
      contents: read
    if: vars.AUTO_DEPLOY_ENABLED == 'true'
    runs-on: ubuntu-latest
    needs: build-image
    timeout-minutes: 3
    environment: dev
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/aws-ecr-login
        id: login-ecr
        with:
          role: ${{ secrets.AWS_HARMONY_DEPLOY_ROLE_ARN }}

      - uses: actions/download-artifact@v5
        with:
          name: harmony-image
          path: /tmp

      - name: Tag Harmony image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker load --input /tmp/harmony-image.tar
          docker tag harmony:latest $ECR_REGISTRY/harmony:$IMAGE_TAG
          docker rmi harmony:latest

      - name: Update deploy tag to AWS
        run: aws secretsmanager update-secret --secret-id ${{ secrets.AWS_HARMONY_DEPLOY_SECRET_ARN }} --secret-string $IMAGE_TAG

      - name: Push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker push --all-tags $ECR_REGISTRY/harmony

      - name: Update ECS task definition with the new image
        id: update-task-definition
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          TASK_DEFINITION=$(aws ecs describe-task-definition --include TAGS --task-definition ${{ secrets.AWS_HARMONY_TASK_DEFINITION_ARN }})
          NEW_TASK_DEFINITION=$(echo "$TASK_DEFINITION" | jq --arg IMAGE "$ECR_REGISTRY/harmony:$IMAGE_TAG" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredAt) | del(.registeredBy)')
          TAGS=$(echo "$TASK_DEFINITION" | jq '.tags')
          NEW_TASK_INFO=$(aws ecs register-task-definition --tags "$TAGS" --cli-input-json "$NEW_TASK_DEFINITION")
          echo "NEW_REVISION=$(echo "$NEW_TASK_INFO" | jq '.taskDefinition.revision')" >> "$GITHUB_OUTPUT"

      - name: Deploy to AWS
        env:
          TASK_DEFINITION_REVISION: ${{ steps.update-task-definition.outputs.NEW_REVISION }}
        run: aws ecs update-service --cluster core --service harmony --task-definition ${{ secrets.AWS_HARMONY_TASK_DEFINITION_ARN }}:$TASK_DEFINITION_REVISION
